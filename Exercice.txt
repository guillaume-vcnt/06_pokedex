1. .map()
‚û°Ô∏è Cr√©e un nouveau tableau contenant uniquement les noms des Pok√©mon.
const names = array.map(pokemon => pokemon.name);
console.log(names);

2. Math.random()
‚û°Ô∏è S√©lectionne un Pok√©mon al√©atoire et affiche son nom.
const randomIndex = Math.floor(Math.random() * array.length);
const randomPokemon = array[randomIndex];
console.log("üé≤", randomPokemon.name);

3. .filter()
‚û°Ô∏è R√©cup√®re uniquement tous les Pok√©mon de type "Fire".
const firePokemons = array.filter(pokemon => pokemon.type === "Fire");
console.log("üî• Pok√©mon de type fire :", firePokemons);

4. .find()
‚û°Ô∏è R√©cup√®re un Pok√©mon de type "Water"
const waterPokemon = pokemons.find(pokemon => pokemon.type === "Water");
console.log("üêü Pok√©mon de type water :", waterPokemon);

5. .sort()
‚û°Ô∏è Trie les Pok√©mon par poids du plus l√©ger au plus lourd.
const sortedByWeight = array.sort((a, b) => parseFloat(a.weight) - parseFloat(b.weight));
console.log(sortedByWeight);

6. .reduce()
‚û°Ô∏è Calcule le poids total de tous les Pok√©mon.
const totalWeight = array.reduce((acc, pokemon) => acc + parseFloat(pokemon.weight), 0);
console.log(totalWeight);

7. .includes()
‚û°Ô∏è Modifie le filtre pour inclure tous les Pok√©mon ayant "Electric" dans leurs types.
const electricPokemons = array.filter(pokemon => pokemon.type.includes("Electric"));
console.log(electricPokemons);

8. .some()
‚û°Ô∏è V√©rifier s'il y a un Pok√©mon de type "Dragon"
const hasDragonType = pokemons.some(pokemon => pokemon.type === "Dragon");
console.log("üêâ Y a-t-il un Pok√©mon de type Dragon ? ", hasDragonType);

9. .every()
‚û°Ô∏è V√©rifier si tous les Pok√©mon ont plus de 30 HP
const allHaveMoreThan30HP = pokemons.every(pokemon => pokemon.hp > 30);
console.log("‚ù§Ô∏è Tous les Pok√©mon ont-ils plus de 30 HP ? ", allHaveMoreThan30HP);

10. .splice()
‚û°Ô∏è Ajouter un nouveau Pok√©mon : "Dracolosse" (Dragon, 91 HP) avec .splice()
pokemons.splice(2, 0, { name: "Dracolosse", type: "Dragon", hp: 91 });
console.log("‚ûï Liste apr√®s ajout de Dracolosse :", pokemons);

11. .pop()
‚û°Ô∏è Supprime le dernier Pok√©mon de la liste et affiche-le.
const lastPokemon = array.pop();
console.log(lastPokemon);

12. .shift()
‚û°Ô∏è Supprime le premier Pok√©mon de la liste et affiche-le.
const firstPokemon = array.shift();
console.log(firstPokemon);

14. Math.max() + For
‚û°Ô∏è Trouve le Pok√©mon le plus lourd en convertissant "weight".
let maxWeight = -Infinity;
let heaviestPokemon;
for (let i = 0; i < array.length; i++) {
  let weight = parseFloat(array[i].weight);
  if (weight > maxWeight) {
    maxWeight = weight;
    heaviestPokemon = array[i];
  }
}
console.log(heaviestPokemon);

15. .forEach()
‚û°Ô∏è Affiche une phrase pour chaque Pok√©mon.
array.forEach(pokemon => {
  console.log(`Ce Pok√©mon s'appelle ${pokemon.name}.`);
});


